@using DapperDog.Models
@using MvcPaging
@model IEnumerable<DapperDog.Models.Product.ProductListItem>


<div>
    <h2>@ViewBag.Title</h2>
    @using (Html.BeginForm("ViewByCategory", "Store", FormMethod.Get))
    {
        <p>
            Select a category:
            @Html.DropDownList("CategoryId")
            <input type="submit" value="Browse" />
        </p>
    }
    @if (Model.Count() > 0)
    {
        <table class="grid">
            <thead>
                <tr>
                    <th>Product name</th>
                    <th>Category</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.Category.Name</td>
                        <td>@product.</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="pager">
            @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.AddRouteValue("categoryid", ViewBag.CategoryDisplayId))
            Displaying @Model.ItemStart - @Model.ItemEnd of @Model.TotalItemCount item(s)
        </div>


    }
</div>
